trigger:
- azure-pipelines-docker

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-18.04'
    steps:    
    - task: Docker@2
      enabled: false
      displayName: Build WebApi
      inputs:
        containerRegistry: 'GKE registry'
        repository: 'identifier-generator/webapi'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/IdentifierGenerator.WebApi/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '$(tag)'
    - task: Docker@2
      enabled: false
      displayName: Build Web.Angular
      inputs:
        containerRegistry: 'GKE registry'
        repository: 'identifier-generator/nginx-ng'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/IdentifierGenerator.Web.Angular/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '$(tag)'
    - task: Docker@2
      enabled: false
      displayName: Build Tools-create-db-user
      inputs:
        containerRegistry: 'GKE registry'
        repository: 'identifier-generator/tools-create-db-user'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/InfraAsCode/create-db-user/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '$(tag)'
    - task: Docker@2
      enabled: true
      displayName: Build Tools-ef-migrate-database
      inputs:
        containerRegistry: 'GKE registry'
        repository: 'identifier-generator/tools-ef-migrate-database'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/InfraAsCode/ef-migrate-database/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '$(tag)'
    - task: CmdLine@2
      inputs:
        script: 'cp -r 
    - task: HelmDeploy@0
      inputs:
        connectionType: 'None'
        command: 'package'
        chartPath: '$(Build.SourcesDirectory)/k8s_gcloud/identifier-generator'
        save: false
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'