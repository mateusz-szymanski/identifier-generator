# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-18.04'

variables:
  applicationUrl: 'http://localhost:4200'

steps:
- task: DownloadBuildArtifacts@0
  displayName: 'Download helmPackage artifact'
  inputs:
    buildType: 'specific'
    project: '793fb093-17e0-4924-82e3-21ba48b0fbd8'
    pipeline: '3'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    artifactName: 'helmPackage'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: DownloadBuildArtifacts@0
  displayName: 'Download protractor artifact'
  inputs:
    buildType: 'specific'
    project: '793fb093-17e0-4924-82e3-21ba48b0fbd8'
    pipeline: '3'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    artifactName: 'protractor'
    downloadPath: '$(Build.ArtifactsDirectory)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.ArtifactsDirectory)/protractor'
    Contents: '**'
    TargetFolder: '$(Build.SourcesDirectory)'

- task: Bash@3
  displayName: 'list artifacts'
  inputs:
    targetType: 'inline'
    script: |
      ls -l $(System.ArtifactsDirectory)/*
      ls -l $(Build.SourcesDirectory)

- task: Npm@1
  displayName: 'npm install'
  inputs:
    workingDir: '$(Build.SourcesDirectory)'
    command: 'install'

- task: Bash@3
  displayName: 'update web drivers'
  inputs:
    targetType: 'inline'
    script: |
      node node_modules/protractor/bin/webdriver-manager update

- task: Npm@1
  enabled: false
  displayName: 'npm e2e'
  inputs:
    command: 'custom'
    workingDir: '$(Build.SourcesDirectory)'
    customCommand: 'run e2e -- --protractor-config=./e2e/protractor-ci.conf.js --base-url=$(applicationUrl) --dev-server-target= --reporters=junit'

- task: PublishTestResults@2
  displayName: 'publish tests'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: |
      **/TEST-*.xml
      **/TESTS-*.xml

- task: Bash@3
  displayName: 'install terraform'
  inputs:
    targetType: 'inline'
    script: |
      wget https://releases.hashicorp.com/terraform/0.12.17/terraform_0.12.17_linux_amd64.zip -O terraform.zip
      unzip terraform.zip
      install terraform $(Agent.ToolsDirectory)
      rm terraform.zip

- task: Bash@3
  displayName: 'get terraform version'
  inputs:
    targetType: 'inline'
    script: |
      terraform  --version